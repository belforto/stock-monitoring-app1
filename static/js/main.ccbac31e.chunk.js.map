{"version":3,"sources":["bank.png","api/Others.tsx","api/Api.tsx","StockProvider.tsx","api/Credentials.tsx","MoveStuffAround.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","funnelData","value","name","fill","suggestedStocks","id","label","callApiTimeSeriesData","symbol","KEY","a","console","log","URL","fetch","response","ok","json","arrayOfData","Object","entries","reverse","alert","status","callNewsApi","method","headers","item","callTickerApi","quotes","StockProvider","useState","data","setData","setSymbol","change","setChange","setupData","extractedData","map","x","i","uv","Number","toFixed","useEffect","style","margin","className","items","shouldItemRender","toLowerCase","indexOf","getItemValue","renderItem","highlighted","key","backgroundColor","zIndex","onChange","e","target","onSelect","type","onClick","width","window","innerWidth","height","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","isAnimationActive","position","MoveStuffAround","news","setNews","rawTickerData","tickerData","exchange","fiftyTwoWeekHighChangePercent","avg","fiftyDayAverage","rawNewsData","prepNews","title","direction","speed","index","whiteSpace","color","padding","css","loading","src","alt","fontSize","App","bank","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccbac31e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bank.c686b98a.png\";","export const funnelData: { value: number; name: string; fill: string }[] = \n[\n  {\n    value: 100,\n    name: \"V1\",\n    fill: \"#8884d8\"\n  },\n  {\n    value: 80,\n    name: \"V2\",\n    fill: \"#83a6ed\"\n  },\n  {\n    value: 50,\n    name: \"V3\",\n    fill: \"#8dd1e1\"\n  },\n  {\n    value: 40,\n    name: \"V4\",\n    fill: \"#82ca9d\"\n  },\n  {\n    value: 26,\n    name: \"V5\",\n    fill: \"#a4de6c\"\n  }\n];\n\n\nexport const suggestedStocks: { id: string; label: string;}[] = \n[\n  { id: \"AMZN\", label: \"AMZN\" },\n  { id: \"AAPL\", label: \"AAPL\" },\n  { id: \"MSFT\", label: \"MSFT\" },\n  { id: \"IBM\", label: \"IBM\" },\n  { id: \"AMD\", label: \"AMD\" }\n]\n","\n\nexport const callApiTimeSeriesData = async (symbol: string,KEY:string) => {\n    console.log(\"++from api ++\"+symbol)\n  let URL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${symbol==\"IBM\"? \"demo\":KEY}`;\n  let response = await fetch(URL);\n\n  if (response.ok) {\n    try {\n      let json = await response.json();\n      let arrayOfData: any = Object.entries(\n        json[\"Time Series (Daily)\"]\n      ).reverse();\n\n      return arrayOfData;\n    } catch (error) {\n      alert(\"ERROR \"+error);\n      console.log(error)\n      return null;\n    }\n  } else {\n    alert(\"HTTP-Error: \" + response.status);\n    return null;\n  }\n};\n\nexport const callNewsApi = async () => {\n    let response = await fetch(\n      \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news/AAPL\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"yahoo-finance15.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"22a8eebbdemsh4695c040111e5e6p19d7d2jsn5f3ad753b40f\"\n        }\n      }\n    );\n\n    if (response.ok) {\n      try {\n        let json = await response.json();\n\n        return json.item;\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(\"HTTP-Error: \" + response.status);\n    }\n  };\n\n  export const callTickerApi = async () => {\n    let response = await fetch(\n      \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/ga/topgainers?start=0\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"yahoo-finance15.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"22a8eebbdemsh4695c040111e5e6p19d7d2jsn5f3ad753b40f\"\n        }\n      }\n    );\n\n    if (response.ok) {\n      try {\n        let json = await response.json();\n\n        return json.quotes;\n      } catch (error) {\n        alert(error);\n        return null;\n      }\n    } else {\n      alert(\"HTTP-Error: \" + response.status);\n      return null;\n    }\n  };\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  AreaChart,\n  Area,\n  FunnelChart,\n  Funnel,\n  LabelList\n} from \"recharts\";\n\nimport ReactAutocomplete from \"react-autocomplete\";\nimport { KEY } from \"./api/Credentials\";\nimport { funnelData,suggestedStocks } from \"./api/Others\";\nimport { callApiTimeSeriesData } from \"./api/Api\";\n\n\n\nexport default function StockProvider() {\n\n  const [data, setData] = useState<any>([]);\n  const [symbol, setSymbol] = useState<string>(\"IBM\");\n  const [change, setChange] = useState<boolean>(false);\n\n  const setupData = async () => {\n    //CALL THE API TO GET PARTICULAR STOCK\n    let data: any = await callApiTimeSeriesData(symbol, KEY);\n    //TRASFORM INTO FORMATED DATA\n    let extractedData:  { name: string; uv: number; }[] = data.map((x, i) => ({\n      name: x[0],\n      uv: Number(x[1][\"1. open\"]).toFixed(2)\n    }));\n\n    setData(extractedData);\n  };\n\n  useEffect(() => {\n    setupData();\n  }, [change]);\n\n  return (\n    <div>\n      <div style={{margin:88}}>\n\n    \n      Change to another stock\n      <div className=\"input-group input-group-lg\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n            Stock : {symbol}\n          </span>\n        </div>\n\n        <ReactAutocomplete\n          items={suggestedStocks}\n          shouldItemRender={(item, value) =>\n            item.label.toLowerCase().indexOf(value.toLowerCase()) > -1\n          }\n          getItemValue={item => item.label}\n          renderItem={(item, highlighted) => (\n            <div key={item.id} style={{ backgroundColor: highlighted ? \"#eee\" : \"transparent\" ,zIndex:77, margin:50}}>\n              {item.label}\n            </div>\n          )}\n          value={symbol}\n          onChange={e => { setSymbol(e.target.value) }}\n          onSelect={value => { setSymbol(value) }}\n        />\n\n        <button type=\"button\" className=\"btn btn-info\"\n          onClick={() => {\n            console.log(symbol);\n            setChange(!change);\n          }}\n        >\n          Change Stock\n        </button>\n\n      </div>\n      <hr/>\n\n      </div>\n\n\n      <div className=\"row\">\n        {data && (\n          <LineChart\n            width={window.innerWidth}\n            height={600}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"pv\"\n              stroke=\"#8884d8\"\n              activeDot={{ r: 18}}\n            />\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n          </LineChart>\n        )}\n        <AreaChart\n          width={window.innerWidth}\n          height={450}\n          data={data}\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n        >\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n            </linearGradient>\n            <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"uv\"\n            stroke=\"#8884d8\"\n            fillOpacity={1}\n            fill=\"url(#colorUv)\"\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"pv\"\n            stroke=\"#82ca9d\"\n            fillOpacity={1}\n            fill=\"url(#colorPv)\"\n          />\n        </AreaChart>\n        <FunnelChart width={500} height={250}>\n          <Tooltip />\n          <Funnel dataKey=\"value\" data={funnelData} isAnimationActive>\n            <LabelList\n              position=\"right\"\n              fill=\"#000\"\n              stroke=\"none\"\n              dataKey=\"name\"\n            />\n          </Funnel>\n        </FunnelChart>\n      </div>\n    </div>\n  );\n}\n","//export const KEY :string= \"demo\";\nexport const KEY :string= \"WOZZKFZ37NPP7BCD\";","import React, { useEffect, useState } from \"react\";\nimport Ticker from \"react-ticker\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\n\nimport { callNewsApi, callTickerApi } from \"./api/Api\";\n\nexport default function MoveStuffAround() {\n\n  const [data, setData] = useState<any[]>();\n  const [news, setNews] = useState<any[]>();\n  const override = ``;\n\n  const setupData = async () => {\n    //CALL THE API\n    let rawTickerData: any = await callTickerApi();\n    //TRANSFORM DATA TO TICKERS\n    const tickerData: { name: string; change: number; avg:number }[] = rawTickerData.map(x => ({\n      name: x.exchange,\n      change: x.fiftyTwoWeekHighChangePercent,\n      avg: x.fiftyDayAverage\n    }));\n    //SET TICKER DATA\n    setData(tickerData);\n\n    let rawNewsData: any = await callNewsApi();\n    //TRANSFORM RAW DATA INTO NEWS TITLES\n    let prepNews = rawNewsData.map(x => ({\n      title: x.title\n    }));\n    \n    //SET NEWS DATA\n    setNews(prepNews);\n  };\n  useEffect(() => {\n    setupData();\n  }, []);\n\n  \n\n  return (\n    <div>\n      <div>\n        {data ? (\n          <Ticker direction={\"toRight\"} speed={15} offset={0}>\n            {({ index }) => (\n              <>\n                <p style={{ whiteSpace: \"nowrap\" }}>\n                  {data.map((x, index) => (\n                    <span\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        backgroundColor: \"green\",\n                        color: \"white\",\n                        padding: 20\n                      }}\n                      key={index}\n                    >\n                      {\" \"}\n                      {x[\"name\"]} {x[\"avg\"]} +++{\" \"}\n                    </span>\n                  ))}{\" \"}\n                </p>\n              </>\n            )}\n          </Ticker>\n        ) : (\n          <div className=\"sweet-loading\">\n            <GridLoader css={override} color={\"#36D7B7\"} loading={true} />\n          </div>\n        )}\n        <Ticker direction={\"toLeft\"} speed={5} offset={5}>\n          {({ index }) => (\n            <>\n              <h4> Read Latest News from The Stock Exchanges ! </h4>\n              <img src=\"www.my-image-source.com/\" alt=\"\" />\n            </>\n          )}\n        </Ticker>\n        {news ? (\n          <Ticker direction={\"toLeft\"} speed={8} offset={0}>\n            {({ index }) => (\n              <>\n                <p style={{ whiteSpace: \"nowrap\" }}>\n                  {news.map((x, index) => (\n                    <span\n                      style={{\n                        whiteSpace: \"nowrap\",\n                          fontSize:\"2.5em\",\n                        padding: 20,\n                        backgroundColor: \"#282c34\",\n                        color: \"white\",\n                      }}\n                      key={index}\n                    >\n                      {\" \"}\n                      {x[\"title\"]} +++{\" \"}\n                    </span>\n                  ))}{\" \"}\n                </p>\n              </>\n            )}\n          </Ticker>\n        ) : (\n          <div className=\"sweet-loading\">\n            <BarLoader css={override} color={\"#36D7B7\"} loading={true} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport bank from \"./bank.png\";\nimport \"./App.css\";\nimport \"./main.css\";\n\n//api key WOZZKFZ37NPP7BCD\nimport StockProvider from \"./StockProvider\";\nimport MoveStuffAround from \"./MoveStuffAround\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       \n        <img src={bank} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Welcome to the  <code>online</code>  Stock News\n        </p>\n       \n      </header>\n      <div className=\"alert alert-success\" role=\"alert\">\n       Live Ticker Data\n      </div>\n      <MoveStuffAround />\n      <StockProvider />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}